1

/*
A     |inputA();
      |displayA();
      |
------------------------------------------------------------
      |                             |
      |                             |
      V                             V
-----------------------------------------------------
B     |inputB();        ||C   |inputC();
      |displayB();      ||    |displayC
      |                 ||    |
---------------------------------------------------------------------
      |                       |
      |                       |
      V                       V
------------------------------------------------------------------
D     |inputD();
      |displayD();
      |
*/

#include<iostream>
#include<conio.h>

using namespace std;

class A{
      int a;

      public:
            void inputA(){
                  cout<<"enter a "<<endl;
                  cin>>a;
            }
            void displayA(){
                  cout<<"a= "<<a<<endl;
            }
};

class B: virtual public A{
      int b;

      public:
            void inputB(){
                  cout<<"enter b "<<endl;
                  cin>>b;
            }
            void displayB(){
                  cout<<"b = "<<b<<endl;
            }
};

class C: virtual public A{
      int c;

      public:
            void inputC(){
                  cout<<"enter c "<<endl;
                  cin>>c;
            }
            void displayC(){
                  cout<<"c= "<<c<<endl;
            }
};

class D: public B ,  public C{
      int d;

      public:
            void inputD(){
                  cout<<"enter d" <<endl;
                  cin>>d;
            }

            void displayD(){
                  cout<<"d= " <<d<<endl;
            }

};

int main(){

      D d;

      d.inputA();
      d.inputB();
      d.inputC();
      d.inputD();

      d.displayA();
      d.displayB();
      d.displayC();
      d.displayD();


      getch();
      return 0;
}


==================================================================================
2


#include<iostream>
#include<conio.h>

using namespace std;

class Alpha {
      int a;

      public:
            Alpha(int x){
                  a=x;
            }
            void showDetails(){
                  cout<<"a= "<<a<<endl;
            }
};

class Beta: public Alpha{
      int b,c;

      public:
            Beta (int x, int y, int z ):Alpha(x){
                  b=y;
                  c=z;
            }

            void showDetails(){
                  cout<<"b= " <<b<<endl;
                  cout<<"c= "<<c<<endl;
            }
};

class Gamma : public Alpha{
      int g;

      public:
            Gamma(int x, int y):Alpha(x){
                  g=y;
            }

            void showDetails(){
                  cout<<"g= "<<g<<endl;
            }
};

int main(){
      Beta b(1,2,3);
      Gamma g(4,5);

      b.Alpha::showDetails();
      b.showDetails();

      g.Alpha::showDetails();
      g.showDetails();


      getch();
      return 0;
}
======================================================================================
3

/*
Alpha |Alpha(int x);
      |showDetails();
      |
--------------------------------------------------------------------
      |
      |
      V
----------------------------------------------------------------------
Beta  |Beta(int x, int y, int z);
      |showDetails();
      |
----------------------------------------------------------------------------
      |
      |
      V
------------------------------------------------------------------------------
Gamma |Gamma(int x, int y,int z, int m ,int n);
      |showDetails();
      |
------------------------------------------------------------------------------
*/


#include<iostream>
#include<conio.h>

using namespace std;

class Alpha{
      int a;

      public:
            Alpha(int x){
                  a=x;
            }

            void showDetails(){
                  cout<<"a = "<<a<<endl;
            }
};

class Beta : public Alpha{
      int b,c;

      public:
            Beta(int x, int y, int z):Alpha(x){
                  b=y;
                  c=z;
            }

            void showDetails(){
                  cout<<"b= "<<b<<endl<<"c= "<<c<<endl;
            }
};

class Gamma : public Beta{
      int g,h;

      public:
            Gamma(int x , int y , int z, int m, int n): Beta (x,y,z){
                  g=m;
                  h=n;
            }

            void showDetails(){
                  cout<<"g= "<<g<<endl<<"h =" <<h<<endl;
            }
};

int main(){
      Gamma g(1,2,3,4,5);

      g.Alpha::showDetails();
      g.Beta::showDetails();
      g.showDetails();


      getch();
      return 0;
}

==================================================================================
4

/*
Beta  |Beta(int x);           ||Gamma     |Gamma(int x, int y);
      |showDetails();         ||          |showDetails();
      |                       ||          |
--------------------------------------------------------------------------------
      |                                   |
      |                                   |
      V                                   V
--------------------------------------------------------------------------------
Alpha |Alpha(int x, int y, int z, int m ,int n);
      |showDetails();
      |
*/

#include<iostream>
#include<conio.h>

using namespace std;

class Beta {
      int b,c;

      public:
            Beta(int x, int y){
                  b=x;
                  c=y;
            }

            void showDetails(){
                  cout<<"b= "<<b<<endl<<"c= "<<c<<endl;
            }
};

class Gamma {
      int g,h;

      public:
            Gamma(int x, int y){
                  g=x;
                  h=y;
            }

            void showDetails(){
                  cout<<"g= "<<g<<endl<<"h= "<<h<<endl;
            }
};

class Alpha : public Beta , public Gamma{
      int a;

      public:
            Alpha(int y , int z , int m, int n , int  x):Beta (y,z),Gamma(m,n){
                  a=x;
            }

            void showDetails(){
                  cout<<"a= "<<a<<endl;
            }
};

int main(){
      Alpha a(2,3,4,5,1);

      a.showDetails();
      a.Beta::showDetails();
      a.Gamma::showDetails();


      getch();
      return 0;
}
================================================================
